services:
  redis:
    image: redis:alpine
    ports:
      - "5379:6379"

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"

  zipkin:
    ports:
      - "5411:9411"

  seq:
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5340:80"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  catalogdb:
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
      - POSTGRES_DB=CatalogDb
    ports:
      - "5432:5432"
    volumes:
      - postgres-catalog:/var/lib/postresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d CatalogDb"]
      interval: 10s
      timeout: 5s
      retries: 5

  identitydb:
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
      - POSTGRES_DB=IdentityDb
    ports:
      - "5433:5432"
    volumes:
      - postgres-identity:/var/lib/postresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d IdentityDb"]
      interval: 10s
      timeout: 5s
      retries: 5

  catalog-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionStrings__CatalogConnection=Server=catalogdb;Port=5432;Database=CatalogDb;User Id=postgres;Password=postgrespw
      - SeqServerUrl=http://seq
    ports:
      - "5102:80"
      - "50002:50001"
    depends_on:
      catalogdb:
        condition: service_healthy

  catalog-api-dapr:
    command:
      [
        "./daprd",
        "-app-id",
        "catalog-api",
        "-app-port",
        "80",
        "-resources-path",
        "/components",
        "-config",
        "/configuration/racketsport-config.yaml",
      ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"
    depends_on:
      rabbitmq:
        condition: service_healthy

  basket-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - SeqServerUrl=http://seq
    ports:
      - "5103:80"
      - "50003:50001"

  basket-api-dapr:
    command:
      [
        "./daprd",
        "-app-id",
        "basket-api",
        "-app-port",
        "80",
        "-resources-path",
        "/components",
        "-config",
        "/configuration/racketsport-config.yaml",
      ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"
    depends_on:
      rabbitmq:
        condition: service_healthy

  identity-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionStrings__IdentityConnection=Server=identitydb;Port=5432;Database=IdentityDb;User Id=postgres;Password=postgrespw
      - SeqServerUrl=http://seq
      - ClientApp=http://localhost:3000
    ports:
      - "5104:80"
      - "50004:50001"
    depends_on:
      identitydb:
        condition: service_healthy

  identity-api-dapr:
    command:
      [
        "./daprd",
        "-app-id",
        "catalog-api",
        "-app-port",
        "80",
        "-resources-path",
        "/components",
        "-config",
        "/configuration/racketsport-config.yaml",
      ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"
    depends_on:
      rabbitmq:
        condition: service_healthy

  dapr-placement:
    command: ["./placement", "-port", "50000", "-log-level", "debug"]
    ports:
      - "50000:50000"

volumes:
  postgres-catalog:
    external: false
  postgres-identity:
    external: false
